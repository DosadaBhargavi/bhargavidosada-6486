{"version":3,"sources":["webpack:///./src/app/user/login.component.html","webpack:///./src/app/user/login.component.ts","webpack:///./src/app/user/profile.component.html","webpack:///./src/app/user/profile.component.ts","webpack:///./src/app/user/user.module.ts","webpack:///./src/app/user/user.routes.ts"],"names":[],"mappings":"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","file":"user-user-module.js","sourcesContent":["module.exports = \"<h1>Login</h1>\\n<hr>\\n<div class=\\\"col-md-4\\\">\\n  <form #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"login(loginForm.value)\\\" autocomplete=\\\"off\\\" novalidate>\\n    <div class=\\\"form-group\\\" >\\n      <label for=\\\"userName\\\">User Name:</label>\\n      <em *ngIf=\\\"loginForm.controls.userName?.invalid && (loginForm.controls.userName?.touched || mouseoverLogin)\\\">Required</em>\\n      <input (ngModel)=\\\"username\\\" name=\\\"userName\\\" required id=\\\"userName\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"User Name...\\\" />\\n    </div>\\n    <div class=\\\"form-group\\\" >\\n      <label for=\\\"password\\\">Password:</label>\\n      <em *ngIf=\\\"loginForm.controls.password?.invalid  && (loginForm.controls.password?.touched || mouseoverLogin)\\\">Required</em>\\n      <input (ngModel)=\\\"password\\\" name=\\\"password\\\" required id=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control\\\"placeholder=\\\"Password...\\\" />\\n    </div>\\n    \\n    <span (mouseenter)=\\\"mouseoverLogin=true\\\" (mouseleave)=\\\"mouseoverLogin=false\\\">\\n      <button type=\\\"submit\\\" [disabled]=\\\"loginForm.invalid\\\" class=\\\"btn btn-primary\\\">Login</button>\\n    </span>\\n    <button type=\\\"button\\\" (click)=\\\"cancel()\\\" class=\\\"btn btn-default\\\">Cancel</button>\\n  </form>\\n  <br>\\n  <div *ngIf=\\\"loginInvalid\\\" class=\\\"alert alert-danger\\\">Invalid Login Info</div>\\n</div>\\n\"","import { Component } from '@angular/core'\nimport { AuthService } from './auth.service'\nimport { Router } from '@angular/router'\n\n@Component({\n  templateUrl: './login.component.html',\n  styles: [`\n    em { float:right; color:#E05C65; padding-left:10px; }\n  `]\n})\nexport class LoginComponent {\n  username\n  password\n  mouseoverLogin\n  loginInvalid = false;\n\n  constructor(private authService:AuthService, private router:Router) {\n\n  }\n\n  login(formValues) {\n    this.authService.loginUser(formValues.userName, formValues.password)\n      .subscribe(resp => {\n        if(!resp) {\n          this.loginInvalid = true;\n        } else {\n          this.router.navigate(['events']);\n        }\n      })\n  }\n\n  cancel() {\n    this.router.navigate(['events'])\n  }\n}","module.exports = \"<div>\\n  <h1>Edit Your Profile </h1>\\n  <hr>\\n  <div class=\\\"col-md-4\\\">\\n    <form [formGroup]=\\\"profileForm\\\" (ngSubmit)=\\\"saveProfile(profileForm.value)\\\" autocomplete=\\\"off\\\" novalidate>\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{'error' : !validateFirstName() }\\\">\\n        <label for=\\\"firstName\\\">First Name:</label>\\n        <em *ngIf=\\\"!validateFirstName() && profileForm.controls.firstName.errors.required\\\">Required</em>\\n        <em *ngIf=\\\"!validateFirstName() && profileForm.controls.firstName.errors.pattern\\\">Must start with a letter</em>\\n        <input formControlName=\\\"firstName\\\" id=\\\"firstName\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"First Name...\\\" />\\n      </div>\\n      <div class=\\\"form-group\\\"  [ngClass]=\\\"{'error' : !validateLastName() }\\\">\\n        <label for=\\\"lastName\\\">Last Name:</label>\\n        <em *ngIf=\\\"!validateLastName()\\\">Required</em>\\n        <input formControlName=\\\"lastName\\\" id=\\\"lastName\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Last Name...\\\" />\\n      </div>\\n\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n\\n      <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" style=\\\"float:right\\\" (click)=\\\"logout()\\\">Logout</button>\\n    </form>\\n  <div>\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core'\nimport { FormControl, FormGroup, Validators } from '@angular/forms'\nimport { AuthService } from './auth.service'\nimport { Router} from '@angular/router'\nimport { TOASTR_TOKEN, Toastr } from '../common/toastr.service'\n\n@Component({\n  templateUrl: './profile.component.html',\n  styles: [`\n    em {float:right; color:#E05C65; padding-left: 10px;}\n    .error input {background-color:#E3C3C5;}\n    .error ::-webkit-input-placeholder { color: #999; }\n    .error ::-moz-placeholder { color: #999; }\n    .error :-moz-placeholder { color:#999; }\n    .error :ms-input-placeholder { color: #999; }\n  `]\n})\nexport class ProfileComponent implements OnInit {\n  profileForm:FormGroup\n  private firstName:FormControl\n  private lastName:FormControl\n\n  constructor(private router:Router, \n    private authService:AuthService,\n    @Inject(TOASTR_TOKEN) private toastr: Toastr) {\n\n  }\n\n  ngOnInit() {\n    this.firstName = new FormControl(this.authService.currentUser.firstName, [Validators.required, Validators.pattern('[a-zA-Z].*')])\n    this.lastName = new FormControl(this.authService.currentUser.lastName, Validators.required)\n\n    this.profileForm = new FormGroup({\n      firstName: this.firstName,\n      lastName: this.lastName\n    })\n  }\n\n  saveProfile(formValues) {\n    if (this.profileForm.valid) {\n      this.authService.updateCurrentUser(formValues.firstName, formValues.lastName)\n      .subscribe(() => {\n        this.toastr.success('Profile Saved');\n      });\n    }\n  }\n\n  logout() {\n    this.authService.logout().subscribe(() => {\n      this.router.navigate(['/user/login']);\n    })\n  }\n\n  validateFirstName() {\n    return this.firstName.valid || this.firstName.untouched\n  }\n  \n  validateLastName() {\n    return this.lastName.valid || this.lastName.untouched\n  }\n\n  cancel() {\n    this.router.navigate(['events'])\n  }\n       \n}","import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { RouterModule } from '@angular/router'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\n\nimport { userRoutes } from './user.routes'\nimport { ProfileComponent } from './profile.component'\nimport { LoginComponent } from './login.component'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(userRoutes)\n  ],\n  declarations: [\n    ProfileComponent,\n    LoginComponent\n  ],\n  providers: [\n\n  ]\n})\nexport class UserModule { }","import { ProfileComponent } from './profile.component'\nimport { LoginComponent } from './login.component'\n\nexport const userRoutes = [\n  {path: 'profile', component: ProfileComponent},\n  {path: 'login', component: LoginComponent}\n]"],"sourceRoot":""}